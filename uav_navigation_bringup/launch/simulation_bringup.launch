<?xml version="1.0" ?>
<launch>

  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="with_wall"/>  <!--basic,with_wall -->
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="db" default="false" />
  <arg name="db_path" default="$(find moveit_config_sim)/default_warehouse_mongo_db" />


  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/uav_with_r200.xacro" /> <!--custom model in uav_with_r200.xacro -->
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </include>

    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

    <node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>


  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find moveit_config_sim)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>


  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find moveit_config_sim)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>


  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find moveit_config_sim)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find moveit_config_sim)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <node name="trajectory_action_controller" pkg="joint_trajectory_action_controller" type="joint_trajectory_action_controller" output="screen"/>

  </group>

</launch>
